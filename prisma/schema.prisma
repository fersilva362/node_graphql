generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model contacts {
  user_id    BigInt
  id         Int       @id @default(autoincrement())
  contact_id BigInt
  created_at DateTime? @default(now()) @db.Timestamp(6)
  users      users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "usr_id")
}

model conversations {
  id                                         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  participant_one                            BigInt?
  participant_two                            BigInt?
  created_at                                 DateTime?  @default(now()) @db.Timetz(6)
  users_conversations_participant_oneTousers users?     @relation("conversations_participant_oneTousers", fields: [participant_one], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user1")
  users_conversations_participant_twoTousers users?     @relation("conversations_participant_twoTousers", fields: [participant_two], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user2")
  messages                                   messages[]
}

model messages {
  id              String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  conversation_id String?        @db.Uuid
  sender_id       BigInt?
  content         String?
  created_at      DateTime?      @default(now()) @db.Timestamp(6)
  conversations   conversations? @relation(fields: [conversation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "conversationID")
  users           users?         @relation(fields: [sender_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "senderID")
}

model users {
  id                                                 BigInt          @id @default(autoincrement())
  username                                           String          @db.VarChar(50)
  email                                              String          @db.VarChar(50)
  password                                           String          @db.VarChar(100)
  contacts                                           contacts[]
  conversations_conversations_participant_oneTousers conversations[] @relation("conversations_participant_oneTousers")
  conversations_conversations_participant_twoTousers conversations[] @relation("conversations_participant_twoTousers")
  messages                                           messages[]
}
